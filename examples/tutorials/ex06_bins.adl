# ADL/CL example 6: Bins in regions
# 
# "bin" keyword is used to partition a region into DISJOINT / NON-OVERLAPPING selections.
# Bins are in principle regions, but they are disjoint by definition.
# They are introduced to avoid writing many many regions.
#
# Bins are different from histograms !
# Histograms are only used for visualization. Removing histograms does not change an 
# analysis description whereas bins are a part of the analysis physics algorithm.
# They represent the selections for which analysis results (e.g. event counts) are given.
#
# There are two ways to define bins:
#   - Define bins on a single variable in a single line. Values give bin boundaries:
#     (Boundaries are assumed variable)
#       bin <variablename> bndry1 bndry2 bndry3 bndry4 .... 
#   - Define bins using multiple variables. Each bin defined in a dedicated line:
#       bin <selection on var1> and <selection on var2> and <selection on var3> ....
#       bin <selection on var1> and <selection on var3> ....

info analysis
  title "ADL/CL ex6: Bins in regions"

# OBJECT DEFINITIONS
object jets
  take Jet
  select pT(Jet) > 50
  select abs(eta(Jet)) < 2.4

object leptons : Union(ELE, MUO)

# ALIAS DEFINITIONS for functions
define MTl = sqrt( 2*pT(leptons[0]) * MET*(1-cos(Phi(METLV[0]) - Phi(leptons[0]) )))
define HT = fHT(jets)
define MT2j0j1 = fMT2(jets[0], jets[1], METLV[0])

# EVENT SELECTION
region hadronic
  select size(jets) >= 4 
  select size(leptons) == 0
  select HT > 300 
  select dphi(jets[0], METLV[0]) > 0.5
  select dphi(jets[1], METLV[0]) > 0.5
  select dphi(jets[2], METLV[0]) > 0.5
  select dR(jets[0], jets[1]) > 1.0
  select MT2j0j1 > 300 
  # Define variable boundary bins on jet multiplicity and MT2j0j1:
  # Each line corresponds to one bin
  bin size(jets) [] 4 5 and MT2j0j1 [] 300 500
  bin size(jets) [] 4 5 and MT2j0j1 [] 500 800
  bin size(jets) [] 4 5 and MT2j0j1 [] 800 1000
  bin size(jets) [] 4 5 and MT2j0j1 > 1000
  bin size(jets) >= 6 and MT2j0j1 [] 300 500
  bin size(jets) >= 6 and MT2j0j1 [] 500 800
  bin size(jets) >= 6 and MT2j0j1 > 800

region leptonic
  select size(jets) >= 3  
  select size(leptons) == 1
  select fHT(jets) + pT(leptons[0]) > 300
  select MET > 150
  # Define MTl bins in a single line. Values give bin boundaries.
  bin MTl 250 350 500 800
  # The following is does the same thing, but it is not practical
  # UNLESS we need to write external counts and errors explicitly.
  # see ex12_counts.adl
  # bin MTl [] 250 350
  # bin MTl [] 350 500
  # bin MTl [] 500 800
  # bin MTl > 800

